#!/usr/bin/bash
## This under-intelligent script tries to guess what today's DN! mp4 video URL would be, if one was published today.
## If it exists, it saves it to a temporary directory in RAM, gives the video file ten seconds to buffer, and then begins playing.
## Video player used is mpv.
## I'm not simply using a pipe or sending a URL to mpv because sometimes I like to save them for future use.
## You want to have up to 500 mib of free ram.

DNROOT="http://publish.dvlabs.com/democracynow/360"
DNSAVEPATH="$(mktemp -d)"
TODAY="$(date +'%Y-%m%d')" ## Today's date, this is part of the download URL.

if [[ ! -e ${DNSAVEPATH} ]]
then
	echo "${DNSAVEPATH} does not exist, creating..."
	mkdir -p "${DNSAVEPATH}"
elif [[ -f ${DNSAVEPATH} ]]
then
	echo "${DNSAVEPATH} exists but is a regular file, saving to /var/tmp instead." ## in case something really fucked up happens
	DNSAVEPATH="/var/tmp"
elif [[ -d ${DNSAVEPATH} ]]
then
	if [[ -f ${DNSAVEPATH}/dn${TODAY}.mp4 ]]
	then
		echo "${DNSAVEPATH}/dn${TODAY}.mp4 exists! removing..." ## this isn't meant to be a "smart" script
		rm -v ${DNSAVEPATH}/dn${TODAY}.mp4
	fi
fi

wget -q -b "${DNROOT}/dn${TODAY}.mp4" -O "${DNSAVEPATH}/dn${TODAY}.mp4" -o /dev/null &

echo "Buffering for 10 seconds..."
sleep 10

mpv "${DNSAVEPATH}/dn${TODAY}.mp4"
echo "removing temporary file..." ## The user has to decide to pause mpv playback and copy the file to permanent storage because when mpv quits we free up that ram
rm -v ${DNSAVEPATH}/dn${TODAY}.mp4"
